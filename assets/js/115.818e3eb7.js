(window.webpackJsonp=window.webpackJsonp||[]).push([[115],{740:function(s,t,a){"use strict";a.r(t);var n=a(5),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[s._v("说明")]),s._v(" "),a("p",[s._v("本文介绍了Go语言结构体的内存对齐现象和对齐策略，并通过一些具体示例介绍了Go语言中结构体内存布局的特殊场景。")])]),s._v(" "),a("h2",{attrs:{id:"结构体的内存布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结构体的内存布局"}},[s._v("#")]),s._v(" 结构体的内存布局")]),s._v(" "),a("h3",{attrs:{id:"结构体大小"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结构体大小"}},[s._v("#")]),s._v(" 结构体大小")]),s._v(" "),a("p",[s._v("结构体是占用一块连续的内存，一个结构体变量的大小是由结构体中的字段决定。")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" Foo "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tA "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int8")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1")]),s._v("\n\tB "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int8")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1")]),s._v("\n\tC "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int8")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" f Foo\nfmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("unsafe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Sizeof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 3")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h3",{attrs:{id:"内存对齐"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内存对齐"}},[s._v("#")]),s._v(" 内存对齐")]),s._v(" "),a("p",[s._v("但是结构体的大小又不完全由结构体的字段决定，例如：")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" Bar "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tx "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int32")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 4")]),s._v("\n\ty "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("Foo  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 8")]),s._v("\n\tz "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("bool")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" b1 Bar\nfmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("unsafe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Sizeof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("b1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 24")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("有的同学可能会认为结构体变量"),a("code",[s._v("b1")]),s._v("的内存布局如下图所示，那么问题来了，结构体变量"),a("code",[s._v("b1")]),s._v("的大小怎么会是24呢？")]),s._v(" "),a("p",[a("img",{attrs:{src:"assets/struct01.png",alt:"memory layout of Bar1"}})]),s._v(" "),a("p",[s._v("很显然结构体变量"),a("code",[s._v("b1")]),s._v("的内存布局和上图中的并不一致，实际上的布局应该如下图所示，灰色虚线的部分就是内存对齐时的填充（padding）部分。")]),s._v(" "),a("p",[a("img",{attrs:{src:"assets/struct02.png",alt:"memory layout of Bar1"}})]),s._v(" "),a("p",[s._v("Go 在编译的时候会按照一定的规则自动进行内存对齐。之所以这么设计是为了减少 CPU 访问内存的次数，加大 CPU 访问内存的吞吐量。如果不进行内存对齐的话，很可能就会增加CPU访问内存的次数。例如下图中CPU想要获取"),a("code",[s._v("b1.y")]),s._v("字段的值可能就需要两次总线周期。")]),s._v(" "),a("p",[a("img",{attrs:{src:"assets/struct03.png",alt:"word size"}})]),s._v(" "),a("p",[s._v("因为 CPU 访问内存时，并不是逐个字节访问，而是以字（word）为单位访问。比如 64位CPU的字长（word size）为8bytes，那么CPU访问内存的单位也是8字节，每次加载的内存数据也是固定的若干字长，如8words（64bytes）、16words(128bytes）等。")]),s._v(" "),a("h3",{attrs:{id:"对齐保证"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对齐保证"}},[s._v("#")]),s._v(" 对齐保证")]),s._v(" "),a("p",[s._v("我们上面已经知道了可以通过内置"),a("code",[s._v("unsafe")]),s._v("包的"),a("code",[s._v("Sizeof")]),s._v("函数来获取一个变量的大小，此外我们还可以通过内置"),a("code",[s._v("unsafe")]),s._v("包的"),a("code",[s._v("Alignof")]),s._v("函数来获取一个变量的对齐系数，例如：")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 结构体变量b1的对齐系数")]),s._v("\nfmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("unsafe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Alignof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("b1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 8")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// b1每一个字段的对齐系数")]),s._v("\nfmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("unsafe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Alignof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("b1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 4：表示此字段须按4的倍数对齐")]),s._v("\nfmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("unsafe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Alignof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("b1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 8：表示此字段须按8的倍数对齐")]),s._v("\nfmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("unsafe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Alignof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("b1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("z"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1：表示此字段须按1的倍数对齐")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[a("code",[s._v("unsafe.Alignof()")]),s._v("的规则如下：")]),s._v(" "),a("ul",[a("li",[s._v("对于任意类型的变量 x ，"),a("code",[s._v("unsafe.Alignof(x)")]),s._v(" 至少为 1。")]),s._v(" "),a("li",[s._v("对于 struct 类型的变量 x，计算 x 每一个字段 f 的 "),a("code",[s._v("unsafe.Alignof(x.f)")]),s._v("，"),a("code",[s._v("unsafe.Alignof(x)")]),s._v(" 等于其中的最大值。")]),s._v(" "),a("li",[s._v("对于 array 类型的变量 x，"),a("code",[s._v("unsafe.Alignof(x)")]),s._v(" 等于构成数组的元素类型的对齐倍数。")])]),s._v(" "),a("p",[s._v("在了解了上面的规则之后，我们就可以通过调整结构体 Bar 中字段的顺序来减少其大小：")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" Bar2 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tx "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int32")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 4")]),s._v("\n\tz "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("bool")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1")]),s._v("\n\ty "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("Foo  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 8")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" b2 Bar2\nfmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("unsafe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Sizeof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("b2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 16")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("此时结构体 Bar2 变量的内存布局示意图如下：")]),s._v(" "),a("p",[a("img",{attrs:{src:"assets/struct04.png",alt:"memory layout of Bar2"}})]),s._v(" "),a("p",[s._v("或者将字段顺序调整为以下顺序。")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" Bar3 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tz "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("bool")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1")]),s._v("\n\tx "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int32")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 4")]),s._v("\n\ty "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("Foo  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 8")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" b3 Bar3\nfmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("unsafe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Sizeof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("b3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 16")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("此时结构体 Bar3 变量的内存布局示意图如下：")]),s._v(" "),a("p",[a("img",{attrs:{src:"assets/struct05.png",alt:"memory layout of Bar3"}})]),s._v(" "),a("p",[s._v("总结一下：在了解了Go的内存对齐规则之后，我们在日常的编码过程中，完全可以通过合理地调整结构体的字段顺序，从而优化结构体的大小。")]),s._v(" "),a("h2",{attrs:{id:"结构体内存布局的特殊场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结构体内存布局的特殊场景"}},[s._v("#")]),s._v(" 结构体内存布局的特殊场景")]),s._v(" "),a("p",[s._v("除了上述利用内存对齐规则调整字段顺序优化结构体内存布局外，关于Go语言中结构体的内存布局还存在以下几种相对特殊的场景需要注意。")]),s._v(" "),a("h3",{attrs:{id:"空结构体字段对齐"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#空结构体字段对齐"}},[s._v("#")]),s._v(" 空结构体字段对齐")]),s._v(" "),a("p",[s._v("首先我们需要了解的一个前提是：如果结构或数组类型不包含大小大于零的字段（或元素），则其大小为0。两个不同的0大小变量在内存中可能有相同的地址。")]),s._v(" "),a("p",[s._v("由于空结构体"),a("code",[s._v("struct{}")]),s._v("的大小为 0，所以当一个结构体中包含空结构体类型的字段时，通常不需要进行内存对齐。例如：")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" Demo1 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tm "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 0")]),s._v("\n\tn "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int8")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" d1 Demo1\nfmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("unsafe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Sizeof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("d1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("但是当空结构体类型作为结构体的最后一个字段时，如果有指向该字段的指针，那么就会返回该结构体之外的地址。为了避免内存泄露会额外进行一次内存对齐。")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" Demo2 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tn "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int8")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1")]),s._v("\n\tm "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" d2 Demo2\nfmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("unsafe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Sizeof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("d2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("示意图：")]),s._v(" "),a("p",[a("img",{attrs:{src:"assets/struct06.png",alt:"empty struct memory layout"}})]),s._v(" "),a("p",[s._v("在实际编程中通过灵活应用空结构体大小为0的特性能够帮助我们节省很多不必要的内存开销。")]),s._v(" "),a("p",[s._v("例如，我们可以使用空结构体作为map的值来实现一个类似 Set 的数据结构。")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" set "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("我们还可以使用空结构体作为通知类channel的元素，例如Go源码"),a("code",[s._v("src/cmd/internal/base/signal.go")]),s._v("中。")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// src/cmd/internal/base/signal.go")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Interrupted is closed when the go command receives an interrupt signal.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" Interrupted "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("chan")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("以及 "),a("code",[s._v("src/net/pipe.go")]),s._v("中都有类似的使用示例。")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// src/net/pipe.go")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// pipeDeadline is an abstraction for handling timeouts.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" pipeDeadline "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tmu     sync"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Mutex "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Guards timer and cancel")]),s._v("\n\ttimer  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Timer\n\tcancel "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("chan")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Must be non-nil")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h3",{attrs:{id:"原子操作在32位平台要求强制内存对齐"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原子操作在32位平台要求强制内存对齐"}},[s._v("#")]),s._v(" 原子操作在32位平台要求强制内存对齐")]),s._v(" "),a("p",[s._v("在 x86 平台上原子操作需要强制内存对齐是因为在 32bit 平台下进行 64bit 原子操作要求必须 8 字节对齐，否则程序会 panic，下面是Go源码"),a("code",[s._v("src/atomic/doc.go")]),s._v("中的说明。")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// src/atomic/doc.go")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// BUG(rsc): On 386, the 64-bit functions use instructions unavailable before the Pentium MMX.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// On non-Linux ARM, the 64-bit functions use instructions unavailable before the ARMv6k core.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// On ARM, 386, and 32-bit MIPS, it is the caller's responsibility")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// to arrange for 64-bit alignment of 64-bit words accessed atomically.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// The first word in a variable or in an allocated struct, array, or slice can")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// be relied upon to be 64-bit aligned.")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("这里可以参照"),a("a",{attrs:{href:"https://github.com/golang/groupcache/blob/master/groupcache.go#L170",target:"_blank",rel:"noopener noreferrer"}},[s._v("groupcache"),a("OutboundLink")],1),s._v("库中的实际应用，示例代码如下。")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" Group "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tname       "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("string")]),s._v("\n\tgetter     Getter\n\tpeersOnce  sync"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Once\n\tpeers      PeerPicker\n\tcacheBytes "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int64")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// limit for sum of mainCache and hotCache size")]),s._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// mainCache is a cache of the keys for which this process")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// (amongst its peers) is authoritative. That is, this cache")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// contains keys which consistent hash on to this process's")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// peer number.")]),s._v("\n\tmainCache cache\n\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// hotCache contains keys/values for which this peer is not")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// authoritative (otherwise they would be in mainCache), but")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// are popular enough to warrant mirroring in this process to")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// avoid going over the network to fetch from a peer.  Having")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// a hotCache avoids network hotspotting, where a peer's")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// network card could become the bottleneck on a popular key.")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// This cache is used sparingly to maximize the total number")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// of key/value pairs that can be stored globally.")]),s._v("\n\thotCache cache\n\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// loadGroup ensures that each key is only fetched once")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// (either locally or remotely), regardless of the number of")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// concurrent callers.")]),s._v("\n\tloadGroup flightGroup\n\n\t"),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("_")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("int32")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// force Stats to be 8-byte aligned on 32-bit platforms")]),s._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Stats are statistics on the group.")]),s._v("\n\tStats Stats\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Stats are per-group statistics.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" Stats "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tGets           AtomicInt "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// any Get request, including from peers")]),s._v("\n\tCacheHits      AtomicInt "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// either cache was good")]),s._v("\n\tPeerLoads      AtomicInt "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// either remote load or remote cache hit (not an error)")]),s._v("\n\tPeerErrors     AtomicInt\n\tLoads          AtomicInt "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// (gets - cacheHits)")]),s._v("\n\tLoadsDeduped   AtomicInt "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// after singleflight")]),s._v("\n\tLocalLoads     AtomicInt "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// total good local loads")]),s._v("\n\tLocalLoadErrs  AtomicInt "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// total bad local loads")]),s._v("\n\tServerRequests AtomicInt "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// gets that came over the network from peers")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br")])]),a("p",[a("code",[s._v("Group")]),s._v("结构体中通过添加一个"),a("code",[s._v("int32")]),s._v("字段强制让"),a("code",[s._v("Stats")]),s._v("字段在32bit平台也是8字节对齐的。")]),s._v(" "),a("h3",{attrs:{id:"fasle-sharing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fasle-sharing"}},[s._v("#")]),s._v(" fasle sharing")]),s._v(" "),a("p",[s._v("结构体内存对齐除了上面的场景外，在一些需要防止CacheLine伪共享的时候，也需要进行特殊的字段对齐。例如"),a("code",[s._v("sync.Pool")]),s._v("中就有这种设计：")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" poolLocal "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tpoolLocalInternal\n\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Prevents false sharing on widespread platforms with")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 128 mod (cache line size) = 0 .")]),s._v("\n\tpad "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("128")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" unsafe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("Sizeof")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("poolLocalInternal"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("128")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("byte")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("结构体中的"),a("code",[s._v("pad")]),s._v("字段就是为了防止false sharing而设计的。")]),s._v(" "),a("blockquote",[a("p",[s._v("当不同的线程同时读写同一个cache line上不同数据时就可能发生false sharing。false sharing会导致多核处理器上严重的系统性能下降。具体的可以参考 "),a("a",{attrs:{href:"http://ifeve.com/falsesharing/",target:"_blank",rel:"noopener noreferrer"}},[s._v("伪共享(False Sharing)"),a("OutboundLink")],1),s._v("。")])]),s._v(" "),a("p",[s._v("如注释所说这里之所以使用128字节进行内存对齐是为了兼容更多的平台。")]),s._v(" "),a("h3",{attrs:{id:"hot-path"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hot-path"}},[s._v("#")]),s._v(" hot path")]),s._v(" "),a("p",[s._v("hot path 是指执行非常频繁的指令序列。")]),s._v(" "),a("p",[s._v("在访问结构体的第一个字段时，我们可以直接使用结构体的指针来访问第一个字段（结构体变量的内存地址就是其第一个字段的内存地址）。")]),s._v(" "),a("p",[s._v("如果要访问结构体的其他字段，除了结构体指针外，还需要计算与第一个值的偏移(calculate offset)。在机器码中，偏移量是随指令传递的附加值，CPU 需要做一次偏移值与指针的加法运算，才能获取要访问的值的地址。因为访问第一个字段的机器代码更紧凑，速度更快。")]),s._v(" "),a("p",[s._v("下面的代码是标准库"),a("code",[s._v("sync.Once")]),s._v("中的使用示例，通过将常用字段放置在结构体的第一个位置上减少CPU要执行的指令数量，从而达到更快的访问效果。")]),s._v(" "),a("div",{staticClass:"language-go line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// src/sync/once.go ")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Once is an object that will perform exactly one action.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// A Once must not be copied after first use.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("type")]),s._v(" Once "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("struct")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// done indicates whether the action has been performed.")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// It is first in the struct because it is used in the hot path.")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// The hot path is inlined at every call site.")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Placing done first allows more compact instructions on some architectures (amd64/386),")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// and fewer instructions (to calculate offset) on other architectures.")]),s._v("\n\tdone "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("uint32")]),s._v("\n\tm    Mutex\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[s._v("参考链接：https://stackoverflow.com/questions/59174176/what-does-hot-path-mean-in-the-context-of-sync-once")])])}),[],!1,null,null,null);t.default=e.exports}}]);