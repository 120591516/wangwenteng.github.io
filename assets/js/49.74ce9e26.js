(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{671:function(s,a,n){"use strict";n.r(a);var t=n(5),r=Object(t.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("div",{staticClass:"custom-block danger"},[n("p",{staticClass:"custom-block-title"},[s._v("说明")]),s._v(" "),n("p",[s._v("今天我们要介绍一个神器——Air能够实时监听项目的代码文件，在代码发生变更之后自动重新编译并执行，大大提高gin框架项目的开发效率。")])]),s._v(" "),n("h2",{attrs:{id:"为什么需要实时加载"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要实时加载"}},[s._v("#")]),s._v(" 为什么需要实时加载？")]),s._v(" "),n("p",[s._v("之前使用Python编写Web项目的时候，常见的Flask或Django框架都是支持实时加载的，你修改了项目代码之后，程序能够自动重新加载并执行（live-reload），这在日常的开发阶段是十分方便的。")]),s._v(" "),n("p",[s._v("在使用Go语言的gin框架在本地做开发调试的时候，经常需要在变更代码之后频繁的按下"),n("code",[s._v("Ctrl+C")]),s._v("停止程序并重新编译再执行，这样就不是很方便。")]),s._v(" "),n("h2",{attrs:{id:"air介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#air介绍"}},[s._v("#")]),s._v(" Air介绍")]),s._v(" "),n("p",[s._v("怎样才能在基于gin框架开发时实现实时加载功能呢？像这种烦恼肯定不会只是你一个人的烦恼，所以我报着肯定有现成轮子的心态开始了全网大搜索。果不其然就在Github上找到了一个工具："),n("a",{attrs:{href:"https://github.com/cosmtrek/air",target:"_blank",rel:"noopener noreferrer"}},[s._v("Air"),n("OutboundLink")],1),s._v("。它支持以下特性：")]),s._v(" "),n("ol",[n("li",[s._v("彩色日志输出")]),s._v(" "),n("li",[s._v("自定义构建或二进制命令")]),s._v(" "),n("li",[s._v("支持忽略子目录")]),s._v(" "),n("li",[s._v("启动后支持监听新目录")]),s._v(" "),n("li",[s._v("更好的构建过程")])]),s._v(" "),n("h3",{attrs:{id:"安装air"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装air"}},[s._v("#")]),s._v(" 安装Air")]),s._v(" "),n("h4",{attrs:{id:"go"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#go"}},[s._v("#")]),s._v(" Go")]),s._v(" "),n("p",[s._v("这也是最经典的安装方式：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("go get -u github.com/cosmtrek/air\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h4",{attrs:{id:"macos"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#macos"}},[s._v("#")]),s._v(" MacOS")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -fLo air https://git.io/darwin_air\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h4",{attrs:{id:"linux"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#linux"}},[s._v("#")]),s._v(" Linux")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -fLo air https://git.io/linux_air\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h4",{attrs:{id:"windows"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#windows"}},[s._v("#")]),s._v(" Windows")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -fLo air.exe https://git.io/windows_air\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h4",{attrs:{id:"docker"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[s._v("#")]),s._v(" Docker")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -it --rm "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    -w "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<PROJECT>"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    -e "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"air_wd=<PROJECT>"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    -v "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("pwd")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v(":"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("PROJECT"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    -p "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("PORT"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(":"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("APP SERVER PORT"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    cosmtrek/air\n    -c "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("CONF"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("然后按照下面的方式在docker中运行你的项目：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -it --rm "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    -w "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/go/src/github.com/cosmtrek/hub"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    -v "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("pwd")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v(":/go/src/github.com/cosmtrek/hub "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    -p "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("9090")]),s._v(":9090 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    cosmtrek/air\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h3",{attrs:{id:"使用air"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用air"}},[s._v("#")]),s._v(" 使用Air")]),s._v(" "),n("p",[s._v("为了敲命令时更简单更方便，你应该把"),n("code",[s._v("alias air='~/.air'")]),s._v("加到你的"),n("code",[s._v(".bashrc")]),s._v("或"),n("code",[s._v(".zshrc")]),s._v("中。")]),s._v(" "),n("p",[s._v("首先进入你的项目目录：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /path/to/your_project\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("最简单的用法就是直接执行下面的命令：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 首先在当前目录下查找 `.air.conf`配置文件，如果找不到就使用默认的")]),s._v("\nair -c .air.conf\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("推荐的使用方法是：")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1. 在当前目录创建一个新的配置文件.air.conf")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("touch")]),s._v(" .air.conf\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2. 复制 `air.conf.example` 中的内容到这个文件，然后根据你的需要去修改它")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 3. 使用你的配置运行 air, 如果文件名是 `.air.conf`，只需要执行 `air`。")]),s._v("\nair\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h4",{attrs:{id:"air-example-conf示例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#air-example-conf示例"}},[s._v("#")]),s._v(" air_example.conf示例")]),s._v(" "),n("p",[s._v("完整的"),n("code",[s._v("air_example.conf")]),s._v("示例配置如下，可以根据自己的需要修改。")]),s._v(" "),n("div",{staticClass:"language-conf line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('# [Air](https://github.com/cosmtrek/air) TOML 格式的配置文件\n\n# 工作目录\n# 使用 . 或绝对路径，请注意 `tmp_dir` 目录必须在 `root` 目录下\nroot = "."\ntmp_dir = "tmp"\n\n[build]\n# 只需要写你平常编译使用的shell命令。你也可以使用 `make`\n# Windows平台示例: cmd = "go build -o tmp\\main.exe ."\ncmd = "go build -o ./tmp/main ."\n# 由`cmd`命令得到的二进制文件名\n# Windows平台示例：bin = "tmp\\main.exe"\nbin = "tmp/main"\n# 自定义执行程序的命令，可以添加额外的编译标识例如添加 GIN_MODE=release\n# Windows平台示例：full_bin = "tmp\\main.exe"\nfull_bin = "APP_ENV=dev APP_USER=air ./tmp/main"\n# 监听以下文件扩展名的文件.\ninclude_ext = ["go", "tpl", "tmpl", "html"]\n# 忽略这些文件扩展名或目录\nexclude_dir = ["assets", "tmp", "vendor", "frontend/node_modules"]\n# 监听以下指定目录的文件\ninclude_dir = []\n# 排除以下文件\nexclude_file = []\n# 如果文件更改过于频繁，则没有必要在每次更改时都触发构建。可以设置触发构建的延迟时间\ndelay = 1000 # ms\n# 发生构建错误时，停止运行旧的二进制文件。\nstop_on_error = true\n# air的日志文件名，该日志文件放置在你的`tmp_dir`中\nlog = "air_errors.log"\n\n[log]\n# 显示日志时间\ntime = true\n\n[color]\n# 自定义每个部分显示的颜色。如果找不到颜色，使用原始的应用程序日志。\nmain = "magenta"\nwatcher = "cyan"\nbuild = "yellow"\nrunner = "green"\n\n[misc]\n# 退出时删除tmp目录\nclean_on_exit = true\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br")])]),n("h4",{attrs:{id:"效果演示"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#效果演示"}},[s._v("#")]),s._v(" 效果演示")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://tva1.sinaimg.cn/large/e6c9d24egy1h3h0fusvq5g20xc0k042d.gif",alt:"air demo"}}),s._v("好了，现在就开始在自己的项目中使用"),n("code",[s._v("Air")]),s._v("，感受实时重新加载的便利吧。")])])}),[],!1,null,null,null);a.default=r.exports}}]);