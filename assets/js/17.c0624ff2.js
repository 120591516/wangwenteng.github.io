(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{616:function(e,t,o){e.exports=o.p+"assets/img/mobx-flow.7c7e6d63.png"},659:function(e,t,o){"use strict";o.r(t);var c=o(5),n=Object(c.a)({},(function(){var e=this,t=e.$createElement,c=e._self._c||t;return c("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[c("div",{staticClass:"custom-block tip"},[c("p",{staticClass:"custom-block-title"},[e._v("说明")]),e._v(" "),c("p",[e._v("Mobx是一个功能强大，上手非常容易的状态管理工具。redux的作者也曾经向大家推荐过它，在不少情况下可以使用Mobx来替代掉redux。")])]),e._v(" "),c("p",[c("img",{attrs:{src:o(616),alt:"MobX unidirectional flow"}})]),e._v(" "),c("p",[e._v("这张图来自于官网，把这张图理解清楚了。基本上对于mobx的理解就算入门了。")]),e._v(" "),c("p",[e._v("官网有明确的核心概念使用方法，并配有"),c("a",{attrs:{href:"https://egghead.io/courses/manage-complex-state-in-react-apps-with-mobx",target:"_blank",rel:"noopener noreferrer"}},[e._v("egghead"),c("OutboundLink")],1),e._v("的视频教程。这里就不一一赘述了。")]),e._v(" "),c("p",[e._v("要特别注意当使用 "),c("code",[e._v("mobx-react")]),e._v(" 时可以定义一个新的生命周期钩子函数 "),c("code",[e._v("componentWillReact")]),e._v("。当组件因为它观察的数据发生了改变，它会安排重新渲染，这个时候 "),c("code",[e._v("componentWillReact")]),e._v(" 会被触发。这使得它很容易追溯渲染并找到导致渲染的操作(action)。")]),e._v(" "),c("ul",[c("li",[c("code",[e._v("componentWillReact")]),e._v(" 不接收参数")]),e._v(" "),c("li",[c("code",[e._v("componentWillReact")]),e._v(" 初始化渲染前不会触发 (使用 "),c("code",[e._v("componentWillMount")]),e._v(" 替代)")]),e._v(" "),c("li",[c("code",[e._v("componentWillReact")]),e._v(" 对于 mobx-react@4+, 当接收新的 props 时并在 "),c("code",[e._v("setState")]),e._v(" 调用后会触发此钩子")]),e._v(" "),c("li",[e._v("要触发"),c("code",[e._v("componentWillReact")]),e._v("必须在render里面用到被观察的变量")]),e._v(" "),c("li",[e._v("使用Mobx之后不会触发"),c("code",[e._v("componentWillReceiveProps")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);