(window.webpackJsonp=window.webpackJsonp||[]).push([[122],{747:function(t,e,s){"use strict";s.r(e);var a=s(5),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("div",{staticClass:"custom-block danger"},[s("p",{staticClass:"custom-block-title"},[t._v("说明")]),t._v(" "),s("p",[t._v("本文是官方protocol buffers v3指南的翻译。")]),t._v(" "),s("p",[t._v("本文翻译自https://developers.google.com/protocol-buffers/docs/proto3。")])]),t._v(" "),s("h3",{attrs:{id:"定义一个消息类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定义一个消息类型"}},[t._v("#")]),t._v(" 定义一个消息类型")]),t._v(" "),s("p",[t._v("首先让我们看一个非常简单的例子。假设您想要定义一个搜索请求消息格式，其中每个搜索请求都包含一个查询词字符串、你感兴趣的查询结果所在的特定页码数和每一页应展示的结果数。")]),t._v(" "),s("p",[t._v("下面是用于定义这个消息类型的 "),s("code",[t._v(".proto")]),t._v(" 文件。")]),t._v(" "),s("div",{staticClass:"language-protobuf line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-protobuf"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("syntax")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"proto3"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("message")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SearchRequest")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" query "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int32")]),t._v(" page_number "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int32")]),t._v(" result_per_page "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("ul",[s("li",[t._v("文件的第一行指定使用 "),s("code",[t._v("proto3")]),t._v(" 语法: 如果不这样写，protocol buffer编译器将假定你使用 "),s("code",[t._v("proto2")]),t._v("。这个声明必须是文件的第一个非空非注释行。")]),t._v(" "),s("li",[s("code",[t._v("SearchRequest")]),t._v(" 消息定义指定了三个字段(名称/值对) ，每个字段表示希望包含在此类消息中的每一段数据。每个字段都有一个名称和一个类型。")])]),t._v(" "),s("h4",{attrs:{id:"指定字段类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#指定字段类型"}},[t._v("#")]),t._v(" 指定字段类型")]),t._v(" "),s("p",[t._v("在上面的示例中，所有字段都是标量类型（scalar types）: 两个整数("),s("code",[t._v("page_number")]),t._v("和 "),s("code",[t._v("result_per_page")]),t._v(")和一个字符串("),s("code",[t._v("query")]),t._v(")。但是也可以为字段指定组合类型，包括枚举和其他消息类型。")]),t._v(" "),s("h4",{attrs:{id:"分配字段编号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分配字段编号"}},[t._v("#")]),t._v(" 分配字段编号")]),t._v(" "),s("p",[t._v("如你所见，消息定义中的每个字段都有一个"),s("strong",[t._v("唯一的编号")]),t._v("。这些字段编号用来在消息二进制格式中标识字段，在消息类型使用后就不能再更改。注意，范围1到15中的字段编号需要一个字节进行编码，包括字段编号和字段类型。范围16到2047的字段编号采用两个字节。因此，应该为经常使用的消息元素保留数字1到15的编号。切记为将来可能添加的经常使用的元素留出一些编号。")]),t._v(" "),s("p",[t._v("你可以指定的最小字段数是1，最大的字段数是 229−1229−1 ，即536,870,911。你也不能使用19000到19999 ("),s("code",[t._v("FieldDescriptor::kFirstReservedNumber")]),t._v(" 到"),s("code",[t._v("FieldDescriptor::kLastReservedNumber")]),t._v(")的编号，它们是预留给Protocol Buffers协议实现的。如果你在你的"),s("code",[t._v(".proto")]),t._v("文件中使用了预留的编号Protocol Buffers编译器就会报错。同样，你也不能使用任何之前保留的字段编号。")]),t._v(" "),s("h4",{attrs:{id:"指定字段规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#指定字段规则"}},[t._v("#")]),t._v(" 指定字段规则")]),t._v(" "),s("p",[t._v("消息字段可以是下列字段之一:")]),t._v(" "),s("ul",[s("li",[t._v("singular: 格式良好的消息可以有这个字段的零个或一个(但不能多于一个)。这是 proto3语法的默认字段规则。")]),t._v(" "),s("li",[s("code",[t._v("repeated")]),t._v(": 该字段可以在格式良好的消息中重复任意次数(包括零次)。重复值的顺序将被保留。")])]),t._v(" "),s("p",[t._v("在 proto3中，标量数值类型的"),s("code",[t._v("repeated")]),t._v("字段默认使用"),s("code",[t._v("packed")]),t._v("编码。")]),t._v(" "),s("p",[t._v("你可以在 "),s("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/encoding#packed",target:"_blank",rel:"noopener noreferrer"}},[t._v("Protocol Buffer Encoding"),s("OutboundLink")],1),t._v(" 中找到关于"),s("code",[t._v("packed")]),t._v("编码的更多信息。")]),t._v(" "),s("h4",{attrs:{id:"添加更多消息类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加更多消息类型"}},[t._v("#")]),t._v(" 添加更多消息类型")]),t._v(" "),s("p",[t._v("可以在一个"),s("code",[t._v(".proto")]),t._v(" 文件中定义多个消息类型。如果你正在定义多个相关的消息，这是非常有用的——例如，如果想定义与 "),s("code",[t._v("SearchRequest")]),t._v(" 消息类型对应的应答消息格式"),s("code",[t._v("SearchResponse")]),t._v("，你就可以将其添加到同一个"),s("code",[t._v(".proto")]),t._v("文件中。")]),t._v(" "),s("div",{staticClass:"language-protobuf line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-protobuf"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("message")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SearchRequest")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" query "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int32")]),t._v(" page_number "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int32")]),t._v(" result_per_page "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("message")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SearchResponse")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("h4",{attrs:{id:"添加注释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加注释"}},[t._v("#")]),t._v(" 添加注释")]),t._v(" "),s("p",[t._v("要给你的"),s("code",[t._v(".proto")]),t._v("文件添加注释，需要使用C/C++风格的"),s("code",[t._v("//")]),t._v("和"),s("code",[t._v("/* ... */")]),t._v("语法。")]),t._v(" "),s("div",{staticClass:"language-protobuf line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-protobuf"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* SearchRequest represents a search query, with pagination options to\n * indicate which results to include in the response. */")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("message")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SearchRequest")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" query "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int32")]),t._v(" page_number "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Which page number do we want?")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int32")]),t._v(" result_per_page "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Number of results to return per page.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("h4",{attrs:{id:"保留字段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#保留字段"}},[t._v("#")]),t._v(" 保留字段")]),t._v(" "),s("p",[t._v("如果你通过完全删除字段或将其注释掉来"),s("strong",[t._v("更新")]),t._v("消息类型，那么未来的用户在对该类型进行自己的更新时可以重用字段号。如果其他人以后加载旧版本的相同"),s("code",[t._v(".proto")]),t._v("文件，这可能会导致严重的问题，包括数据损坏，隐私漏洞等等。确保这种情况不会发生的一种方法是指定已删除字段的字段编号(和/或名称，这也可能导致 JSON 序列化问题)是保留的（"),s("code",[t._v("reserved")]),t._v("）。如果将来有任何用户尝试使用这些字段标识符，protocol buffer编译器将发出提示。")]),t._v(" "),s("div",{staticClass:"language-protobuf line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-protobuf"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("message")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Foo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("reserved")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("to")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("reserved")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bar"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("注意，不能在同一个"),s("code",[t._v("reserved")]),t._v("语句中混合字段名和字段编号。")]),t._v(" "),s("h4",{attrs:{id:"从你的-proto文件生成了什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#从你的-proto文件生成了什么"}},[t._v("#")]),t._v(" 从你的"),s("code",[t._v(".proto")]),t._v("文件生成了什么？")]),t._v(" "),s("p",[t._v("当你使用 protocol buffer 编译器来运行"),s("code",[t._v(".proto")]),t._v("文件时，编译器用你选择的语言生成你需要使用文件中描述的消息类型，包括获取和设置字段值，将消息序列化为输出流，以及从输入流解析消息的代码。")]),t._v(" "),s("ul",[s("li",[t._v("对**C++**来说，编译器会为每个"),s("code",[t._v(".proto")]),t._v("文件生成一个"),s("code",[t._v(".h")]),t._v("文件和一个"),s("code",[t._v(".cc")]),t._v("文件，"),s("code",[t._v(".proto")]),t._v("文件中的每一个消息有一个对应的类。")]),t._v(" "),s("li",[t._v("对于 "),s("strong",[t._v("Java")]),t._v("，编译器生成一个"),s("code",[t._v(".java")]),t._v(" 文件，每种消息类型都有一个类，还有一个特殊的 "),s("code",[t._v("Builder")]),t._v(" 类用于创建消息类实例。")]),t._v(" "),s("li",[t._v("对于 "),s("strong",[t._v("Kotlin")]),t._v("，除了 Java 生成的代码之外，编译器还生成一个每种消息类型的 "),s("code",[t._v(".kt")]),t._v(" 文件，包含一个 DSL，可用于简化消息实例的创建。")]),t._v(" "),s("li",[s("strong",[t._v("Python")]),t._v(" 稍有不同ー Python 编译器为"),s("code",[t._v(".proto")]),t._v("文件中的每个消息类型生成一个带静态描述符的模块，然后与"),s("em",[t._v("metaclass")]),t._v("一起使用，在运行时创建必要的 Python 数据访问类。")]),t._v(" "),s("li",[t._v("对于 "),s("strong",[t._v("Go")]),t._v("，编译器为文件中的每种消息类型生成一个类型（type）到一个"),s("code",[t._v(".pb.go")]),t._v(" 文件。")]),t._v(" "),s("li",[t._v("对于 "),s("strong",[t._v("Ruby")]),t._v("，编译器生成一个"),s("code",[t._v(".rb")]),t._v(" 文件，其中包含一个包含消息类型的 Ruby 模块。")]),t._v(" "),s("li",[t._v("对于 "),s("strong",[t._v("Objective-C")]),t._v("，编译器从每个"),s("code",[t._v(".proto")]),t._v("文件生成一个 "),s("code",[t._v("pbobjc.h")]),t._v(" 和 "),s("code",[t._v("pbobjc.m")]),t._v(" 文件，"),s("code",[t._v(".proto")]),t._v("文件中描述的每种消息类型都有一个类。")]),t._v(" "),s("li",[t._v("对于 "),s("strong",[t._v("C#")]),t._v(" ，编译器生从每个"),s("code",[t._v(".proto")]),t._v("文件生成一个"),s("code",[t._v(".cs")]),t._v(" 文件。"),s("code",[t._v(".proto")]),t._v("文件中描述的每种消息类型都有一个类。")]),t._v(" "),s("li",[t._v("对于 "),s("strong",[t._v("Dart")]),t._v("，编译器为文件中的每种消息类型生成一个"),s("code",[t._v(".pb.dart")]),t._v(" 文件。")])]),t._v(" "),s("p",[t._v("你可以通过学习所选语言的教程(proto3版本即将推出)了解更多关于使用每种语言的 API 的信息。有关 API 的更多细节，请参阅相关的 "),s("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/reference/overview",target:"_blank",rel:"noopener noreferrer"}},[t._v("API reference"),s("OutboundLink")],1),t._v("(proto3版本也即将推出)。")]),t._v(" "),s("h3",{attrs:{id:"标量值类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#标量值类型"}},[t._v("#")]),t._v(" 标量值类型")]),t._v(" "),s("p",[t._v("标量消息字段可以具有以下类型之一——该表显示了"),s("code",[t._v(".proto")]),t._v("文件，以及自动生成类中的对应类型:")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v(".proto Type")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("Notes")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("C++ Type")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("Java/Kotlin Type[1]")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("Python Type[3]")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("Go Type")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("Ruby Type")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("C# Type")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("PHP Type")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("Dart Type")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("double")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("double")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("double")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("float")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("float64")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Float")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("double")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("float")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("double")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("float")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("float")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("float")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("float")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("float32")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Float")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("float")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("float")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("double")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("int32")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead.")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int32")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int32")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Fixnum or Bignum (as required)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("integer")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("int64")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint64 instead.")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int64")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int/long[4]")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int64")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Bignum")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("integer/string[6]")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Int64")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("uint32")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Uses variable-length encoding.")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("uint32")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int[2]")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int/long[4]")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("uint32")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Fixnum or Bignum (as required)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("uint")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("integer")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("uint64")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Uses variable-length encoding.")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("uint64")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("long[2]")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int/long[4]")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("uint64")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Bignum")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("ulong")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("integer/string[6]")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Int64")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("sint32")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s.")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int32")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int32")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Fixnum or Bignum (as required)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("integer")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("sint64")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s.")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int64")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int/long[4]")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int64")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Bignum")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("integer/string[6]")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Int64")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("fixed32")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Always four bytes. More efficient than uint32 if values are often greater than 228.")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("uint32")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int[2]")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int/long[4]")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("uint32")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Fixnum or Bignum (as required)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("uint")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("integer")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("fixed64")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Always eight bytes. More efficient than uint64 if values are often greater than 256.")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("uint64")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("long[2]")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int/long[4]")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("uint64")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Bignum")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("ulong")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("integer/string[6]")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Int64")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("sfixed32")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Always four bytes.")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int32")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int32")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Fixnum or Bignum (as required)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("integer")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("sfixed64")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Always eight bytes.")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int64")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int/long[4]")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("int64")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Bignum")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("integer/string[6]")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Int64")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("bool")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("bool")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("boolean")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("bool")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("bool")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("TrueClass/FalseClass")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("bool")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("boolean")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("bool")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("string")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("A string must always contain UTF-8 encoded or 7-bit ASCII text, and cannot be longer than 232.")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("string")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("String")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("str/unicode[5]")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("string")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("String (UTF-8)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("string")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("string")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("String")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("bytes")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("May contain any arbitrary sequence of bytes no longer than 232.")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("string")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("ByteString")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("str (Python 2) bytes (Python 3)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("[]byte")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("String (ASCII-8BIT)")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("ByteString")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("string")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("List")])])])]),t._v(" "),s("p",[t._v("在使用 "),s("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/encoding",target:"_blank",rel:"noopener noreferrer"}},[t._v("Protocol Buffer Encoding"),s("OutboundLink")],1),t._v(" 对消息进行序列化时，可以了解有关这些类型如何编码的更多信息。")]),t._v(" "),s("p",[t._v("[1] Kotlin 使用来自 Java 的相应类型，甚至是无符号类型，以确保混合 Java/Kotlin 代码库的兼容性。")]),t._v(" "),s("p",[t._v("[2] 在 Java 中，无符号的32位和64位整数使用它们的有符号对应项来表示，最高位存储在有符号位中。")]),t._v(" "),s("p",[t._v("[3] 在任何情况下，为字段设置值都将执行类型检查，以确保其有效。")]),t._v(" "),s("p",[t._v("[4] 64位或无符号的32位整数在解码时总是表示为 long ，但如果在设置字段时给出 int，则可以表示为 int。在任何情况下，值必须与设置时表示的类型相匹配。见[2]。")]),t._v(" "),s("p",[t._v("[5] Python 字符串在解码时表示为 unicode，但如果给出了 ASCII 字符串，则可以表示为 str (这可能会更改)。")]),t._v(" "),s("p",[t._v("[6] 整数用于64位机器，字符串用于32位机器。")]),t._v(" "),s("h3",{attrs:{id:"默认值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#默认值"}},[t._v("#")]),t._v(" 默认值")]),t._v(" "),s("p",[t._v("当解析消息时，如果编码消息不包含特定的 singular 元素，则解析对象中的相应字段将设置为该字段的默认值。")]),t._v(" "),s("ul",[s("li",[t._v("对于字符串，默认值为空字符串。")]),t._v(" "),s("li",[t._v("对于字节，默认值为空字节。")]),t._v(" "),s("li",[t._v("对于布尔值，默认值为 false。")]),t._v(" "),s("li",[t._v("对于数值类型，默认值为零。")]),t._v(" "),s("li",[t._v("对于枚举，默认值是第一个定义的枚举值，该值必须为0。")]),t._v(" "),s("li",[t._v("对于消息字段，未设置该字段。其确切值与语言有关。详细信息请参阅"),s("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/reference/overview",target:"_blank",rel:"noopener noreferrer"}},[t._v("生成的代码指南"),s("OutboundLink")],1),t._v("。")])]),t._v(" "),s("p",[t._v("repeated 字段的默认值为空(通常是适当语言中的空列表)。")]),t._v(" "),s("p",[t._v("请注意，对于标量消息字段，一旦消息被解析，就无法判断字段是显式设置为默认值(例如，是否一个布尔值是被设置为 "),s("code",[t._v("false")]),t._v(")还是根本没有设置: 在定义消息类型时应该牢记这一点。例如，如果您不希望某个行为在默认情况下也发生，那么就不要设置一个布尔值，该布尔值在设置为 "),s("code",[t._v("false")]),t._v(" 时会开启某些行为。还要注意，如果将标量消息字段"),s("strong",[t._v("设置")]),t._v("为默认值，则该值将不会在传输过程中序列化。")]),t._v(" "),s("p",[t._v("有关生成的代码的默认工作方式的更多详细信息，请参阅所选语言的"),s("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/reference/overview",target:"_blank",rel:"noopener noreferrer"}},[t._v("生成代码指南"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"枚举"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#枚举"}},[t._v("#")]),t._v(" 枚举")]),t._v(" "),s("p",[t._v("在定义消息类型时，你可能希望其中一个字段只能是预定义的值列表中的一个值。例如，假设你想为每个 "),s("code",[t._v("SearchRequest")]),t._v(" 添加一个语料库字段，其中语料库可以是 "),s("code",[t._v("UNIVERSAL")]),t._v("、 "),s("code",[t._v("WEB")]),t._v("、 "),s("code",[t._v("IMAGES")]),t._v("、 "),s("code",[t._v("LOCAL")]),t._v("、 "),s("code",[t._v("NEWS")]),t._v("、 "),s("code",[t._v("PRODUCTS")]),t._v(" 或 "),s("code",[t._v("VIDEO")]),t._v("。你可以通过在消息定义中添加一个枚举，为每个可能的值添加一个常量来非常简单地完成这项工作。")]),t._v(" "),s("p",[t._v("在下面的例子中，我们添加了一个名为 "),s("code",[t._v("Corpus")]),t._v(" 的"),s("code",[t._v("enum")]),t._v("，包含所有可能的值，以及一个类型为 "),s("code",[t._v("Corpus")]),t._v(" 的字段:")]),t._v(" "),s("div",{staticClass:"language-protobuf line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-protobuf"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("message")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SearchRequest")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" query "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int32")]),t._v(" page_number "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int32")]),t._v(" result_per_page "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Corpus")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    UNIVERSAL "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    WEB "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    IMAGES "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    LOCAL "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    NEWS "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    PRODUCTS "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    VIDEO "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token positional-class-name class-name"}},[t._v("Corpus")]),t._v(" corpus "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br")])]),s("p",[t._v("如你所见，Corpus enum 的第一个常量映射为零: 每个 enum 定义必须包含一个常量，该常量映射为零作为它的第一个元素。这是因为:")]),t._v(" "),s("ol",[s("li",[t._v("必须有一个零值，这样我们就可以使用0作为数值默认值。")]),t._v(" "),s("li",[t._v("零值必须是第一个元素，以便与 proto2语义兼容，其中第一个枚举值总是默认值。")])]),t._v(" "),s("p",[t._v("你可以通过将相同的值分配给不同的枚举常量来定义别名。为此，你需要将 "),s("code",[t._v("allow _ alias")]),t._v(" 选项设置为 "),s("code",[t._v("true")]),t._v("，否则，当发现别名时，protocol 编译器将生成错误消息。")]),t._v(" "),s("div",{staticClass:"language-protobuf line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-protobuf"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("message")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyMessage1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EnumAllowingAlias")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("option")]),t._v(" allow_alias "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    UNKNOWN "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    STARTED "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    RUNNING "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("message")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyMessage2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EnumNotAllowingAlias")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    UNKNOWN "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    STARTED "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// RUNNING = 1;  // Uncommenting this line will cause a compile error inside Google and a warning message outside.")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br")])]),s("p",[t._v("枚举的常数必须在32位整数的范围内。由于枚举值在传输时使用"),s("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/encoding",target:"_blank",rel:"noopener noreferrer"}},[t._v("变长编码"),s("OutboundLink")],1),t._v("，因此负值效率低，因此不推荐使用。可以在消息定义中定义枚举，如上面的例子所示，也可以在外面定义——这样就可以在"),s("code",[t._v(".proto")]),t._v("文件中的消息定义中重用这些枚举。你还可以使用"),s("code",[t._v("_MessageType_._EnumType_")]),t._v(" 语法，使用在一个消息中声明的"),s("code",[t._v("enum")]),t._v("类型作为不同消息中的字段类型。")]),t._v(" "),s("p",[t._v("当对一个使用了枚举的"),s("code",[t._v(".proto")]),t._v("文件运行 protocol buffer 编译器的时候，对于 Java, Kotlin,或 C++ 生成的代码中将有一个对应的enum，或者对于 Python 会生成一个特殊的"),s("code",[t._v("EnumDescriptor")]),t._v("类，它被用于在运行时生成的类中创建一组带有整数值的符号常量。")]),t._v(" "),s("p",[t._v("**注意：**生成的代码可能会受到特定于语言的枚举数限制(单种语言的数量低于千)。请检查你计划使用的语言的限制。")]),t._v(" "),s("p",[t._v("在反序列化过程中，不可识别的枚举值将保留在消息中，尽管当消息被反序列化时，这种值的表示方式依赖于语言。在支持值超出指定符号范围(如 C++ 和 Go)的开放枚举类型的语言中，未知枚举值仅存储为其底层的整数表示形式。在具有闭合枚举类型(如 Java)的语言中，枚举中的一个类型将用于表示一个无法识别的值，并且可以使用特殊的访问器访问底层的整数。在这两种情况下，如果消息被序列化，那么不可识别的值仍然会与消息一起被序列化。")]),t._v(" "),s("p",[t._v("有关如何在应用程序中使用消息"),s("code",[t._v("enum")]),t._v("的详细信息，请参阅为所选语言"),s("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/reference/overview",target:"_blank",rel:"noopener noreferrer"}},[t._v("生成的代码指南"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("h4",{attrs:{id:"预留值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#预留值"}},[t._v("#")]),t._v(" 预留值")]),t._v(" "),s("p",[t._v("如果通过完全删除枚举条目或注释掉枚举类型来更新枚举类型，那么未来的用户在自己更新该类型时可以重用该数值。这可能会导致严重的问题，如果以后有人加载旧版本的相同"),s("code",[t._v(".proto")]),t._v("文件，包括数据损坏，隐私漏洞等等。确保不发生这种情况的一种方法是指定已删除条目的数值(和/或名称，这也可能导致 JSON 序列化问题)为 "),s("code",[t._v("reserved")]),t._v("。如果任何未来的用户试图使用这些标识符，protocol buffer 编译器将报错。你可以使用 "),s("code",[t._v("max")]),t._v("关键字指定保留的数值范围最大为可能的值。")]),t._v(" "),s("div",{staticClass:"language-protobuf line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-protobuf"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Foo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("reserved")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("to")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("to")]),t._v(" max"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("reserved")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"FOO"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"BAR"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("注意，不能在同一个保留语句中混合字段名和数值。")]),t._v(" "),s("h3",{attrs:{id:"使用其他消息类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用其他消息类型"}},[t._v("#")]),t._v(" 使用其他消息类型")]),t._v(" "),s("p",[t._v("你可以使用其他消息类型作为字段类型。例如，假设你希望在每个 "),s("code",[t._v("SearchResponse")]),t._v("消息中包含UI个 "),s("code",[t._v("Result")]),t._v("消息——为了做到这一点，你可以在同一个"),s("code",[t._v(".proto")]),t._v("文件中定义 "),s("code",[t._v("Result")]),t._v("消息类型。然后在 "),s("code",[t._v("SearchResponse")]),t._v("中指定 "),s("code",[t._v("Result")]),t._v(" 类型的字段。")]),t._v(" "),s("div",{staticClass:"language-protobuf line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-protobuf"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("message")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SearchResponse")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("repeated")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token positional-class-name class-name"}},[t._v("Result")]),t._v(" results "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("message")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Result")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" url "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" title "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("repeated")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" snippets "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("h4",{attrs:{id:"导入定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#导入定义"}},[t._v("#")]),t._v(" 导入定义")]),t._v(" "),s("p",[t._v("在上面的示例中，"),s("code",[t._v("Result")]),t._v("消息类型定义在与 "),s("code",[t._v("SearchResponse")]),t._v("相同的文件中——如果你希望用作字段类型的消息类型已经在另一个"),s("code",[t._v(".proto")]),t._v("文件中定义了，该怎么办？")]),t._v(" "),s("p",[t._v("你可以通过 "),s("em",[t._v("import")]),t._v(" 来使用来自其他 "),s("code",[t._v(".proto")]),t._v(" 文件的定义。要导入另一个"),s("code",[t._v(".proto")]),t._v(" 的定义，你需要在文件顶部添加一个 import 语句:")]),t._v(" "),s("div",{staticClass:"language-protobuf line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-protobuf"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"myproject/other_protos.proto"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("默认情况下，只能从直接导入的 "),s("code",[t._v(".proto")]),t._v(" 文件中使用定义。但是，有时你可能需要将 "),s("code",[t._v(".proto")]),t._v(" 文件移动到新的位置。你可以在旧目录放一个占位的"),s("code",[t._v(".proto")]),t._v("文件使用"),s("code",[t._v("import public")]),t._v(" 概念将所有导入转发到新位置，而不必直接移动"),s("code",[t._v(".proto")]),t._v("文件并修改所有的地方。")]),t._v(" "),s("p",[s("strong",[t._v("注意，Java 中没有 import public 功能。")])]),t._v(" "),s("p",[s("code",[t._v("import public")]),t._v("依赖项可以被任何导入包含"),s("code",[t._v("import public")]),t._v("语句的 proto 的代码传递依赖。例如：")]),t._v(" "),s("div",{staticClass:"language-protobuf line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-protobuf"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// new.proto")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// All definitions are moved here")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// old.proto")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// This is the proto that all clients are importing.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"new.proto"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"other.proto"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// client.proto")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"old.proto"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// You use definitions from old.proto and new.proto, but not other.proto")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("p",[t._v("protocol 编译器使用命令行"),s("code",[t._v("-I")]),t._v("/"),s("code",[t._v("--proto_path")]),t._v("参数指定的一组目录中搜索导入的文件。如果没有给该命令行参数，则查看调用编译器的目录。一般来说，你应该将 "),s("code",[t._v("--proto_path")]),t._v(" 参数设置为项目的根目录并为所有导入使用正确的名称。")]),t._v(" "),s("h4",{attrs:{id:"使用proto2消息类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用proto2消息类型"}},[t._v("#")]),t._v(" 使用proto2消息类型")]),t._v(" "),s("p",[t._v("导入 proto2消息类型并在 proto3消息中使用它们是可能的，反之亦然。然而，proto2 enum 不能直接在 proto3语法中使用(如果一个导入的 proto2消息使用了它们，那没问题)。")]),t._v(" "),s("h3",{attrs:{id:"嵌套类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#嵌套类型"}},[t._v("#")]),t._v(" 嵌套类型")]),t._v(" "),s("p",[t._v("你可以在其他消息类型中定义和使用消息类型，如下面的例子——这里的"),s("code",[t._v("Result")]),t._v("消息是在 "),s("code",[t._v("SearchResponse")]),t._v("消息中定义的:")]),t._v(" "),s("div",{staticClass:"language-protobuf line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-protobuf"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("message")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SearchResponse")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("message")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Result")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" url "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" title "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("repeated")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" snippets "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("repeated")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token positional-class-name class-name"}},[t._v("Result")]),t._v(" results "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("p",[t._v("如果要在其父消息类型之外重用此消息类型，请通过"),s("code",[t._v("_Parent_._Type_")]),t._v("使用:")]),t._v(" "),s("div",{staticClass:"language-protobuf line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-protobuf"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("message")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SomeOtherMessage")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token positional-class-name class-name"}},[t._v("SearchResponse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Result")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("你可以随心所欲地将信息一层又一层嵌入其中:")]),t._v(" "),s("div",{staticClass:"language-protobuf line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-protobuf"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("message")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Outer")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("                  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Level 0")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("message")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MiddleAA")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Level 1")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("message")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Inner")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Level 2")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int64")]),t._v(" ival "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v("  booly "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("message")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MiddleBB")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Level 1")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("message")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Inner")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Level 2")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int32")]),t._v(" ival "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v("  booly "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])]),s("h3",{attrs:{id:"更新消息类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更新消息类型"}},[t._v("#")]),t._v(" 更新消息类型")]),t._v(" "),s("p",[t._v("如果现有的消息类型不再满足你的所有需要——例如，你希望消息格式有一个额外的字段——但是你仍然希望使用用旧格式创建的代码，不要担心！在不破坏任何现有代码的情况下更新消息类型非常简单，只需记住以下规则:")]),t._v(" "),s("ul",[s("li",[t._v("不要更改任何现有字段的字段编号")]),t._v(" "),s("li",[t._v("如果添加新字段，那么任何使用“旧”消息格式通过代码序列化的消息仍然可以通过新生成的代码进行解析。你应该记住这些元素的默认值，以便新代码能够正确地与旧代码生成的消息交互。类似地，新代码创建的消息可以通过旧代码解析: 旧的二进制文件在解析时直接忽略新字段。有关详细信息，请参阅 未知字段 部分。")]),t._v(" "),s("li",[t._v("字段可以被删除，只要字段编号不再用于你更新的消息类型。你可能希望改为重命名字段，或者为其添加”OBSOLETE_“前缀，或者声明字段编号为"),s("code",[t._v("reserved")]),t._v("，以便"),s("code",[t._v(".proto")]),t._v("的未来用户不可能不小心重复使用这个编号。")]),t._v(" "),s("li",[s("code",[t._v("int32")]),t._v("、 "),s("code",[t._v("uint32")]),t._v("、 "),s("code",[t._v("int64")]),t._v("、 "),s("code",[t._v("uint64")]),t._v("和 "),s("code",[t._v("bool")]),t._v("都是兼容的——这意味着您可以在不破坏向前或向后兼容性的情况下将一个字段从这些类型中的一个更改为另一个。")]),t._v(" "),s("li",[t._v("如果一个数字被解析到一个并不适当的类型中，你会得到与在 C++ 中将数字转换为该类型相同的效果(例如，如果一个64位的数字被读作 int32，它将被截断为32位)")]),t._v(" "),s("li",[s("code",[t._v("sint32")]),t._v("和 "),s("code",[t._v("sint64")]),t._v("相互兼容，但与其他整数类型不兼容。")]),t._v(" "),s("li",[s("code",[t._v("string")]),t._v("和"),s("code",[t._v("bytes")]),t._v("是兼容的，只要字节是有效的 UTF-8。")]),t._v(" "),s("li",[t._v("如果字节包含消息的编码版本，则嵌入的消息与"),s("code",[t._v("bytes")]),t._v("兼容。")]),t._v(" "),s("li",[s("code",[t._v("fixed32")]),t._v("与 "),s("code",[t._v("sfixed32")]),t._v("兼容 "),s("code",[t._v("fixed64")]),t._v("与 "),s("code",[t._v("sfixed64")]),t._v("兼容。")]),t._v(" "),s("li",[t._v("对于"),s("code",[t._v("string")]),t._v("、"),s("code",[t._v("bytes")]),t._v("和消息字段，"),s("code",[t._v("optional")]),t._v("字段与"),s("code",[t._v("repeated")]),t._v("字段兼容。给定重复字段的序列化数据作为输入，如果该字段是基本类型字段，期望该字段为可选字段的客户端将接受最后一个输入值; 如果该字段是消息类型字段，则合并所有输入元素。注意，这对于数字类型(包括 bools 和 enums)通常是不安全的。重复的数值类型字段可以按"),s("code",[t._v("packed")]),t._v("的格式序列化，如果是"),s("code",[t._v("optional")]),t._v("字段，则无法正确解析这些字段。")]),t._v(" "),s("li",[t._v("Enum 在格式方面与 int32、 uint32、 int64和 uint64兼容(请注意，如果不适合，值将被截断)。但是要注意，当消息被反序列化时，客户端代码可能会区别对待它们: 例如，未被识别的 proto3 "),s("code",[t._v("enum")]),t._v("类型将保留在消息中，但是当消息被反序列化时，这种类型的表示方式依赖于语言。Int 字段总是保留它们的值。")]),t._v(" "),s("li",[t._v("将单个值更改为"),s("strong",[t._v("新")]),t._v("的"),s("code",[t._v("oneof")]),t._v("成员是安全的，并且二进制兼容。如果确保没有代码一次设置多个字段，那么将多个字段移动到新的"),s("code",[t._v("oneof")]),t._v("字段中可能是安全的。将任何字段移动到现有的字段中都是不安全的。")])]),t._v(" "),s("h3",{attrs:{id:"未知字段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#未知字段"}},[t._v("#")]),t._v(" 未知字段")]),t._v(" "),s("p",[t._v("未知字段是格式良好的协议缓冲区序列化数据，表示解析器不识别的字段。例如，当旧二进制解析由新二进制发送的带有新字段的数据时，这些新字段将成为旧二进制中的未知字段。")]),t._v(" "),s("p",[t._v("最初，proto3消息在解析过程中总是丢弃未知字段，但在3.5版本中，我们重新引入了未知字段的保存来匹配 proto2行为。在3.5及以后的版本中，解析期间保留未知字段，并将其包含在序列化输出中。")]),t._v(" "),s("h2",{attrs:{id:"any"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#any"}},[t._v("#")]),t._v(" Any")]),t._v(" "),s("p",[s("code",[t._v("Any")]),t._v(" 消息类型允许你将消息作为嵌入类型使用，而不需要其 "),s("code",[t._v(".proto")]),t._v(" 定义。"),s("code",[t._v("Any")]),t._v("包含一个任意序列化的字节消息，以及一个解析为该消息的类型作为消息的全局唯一标识符的URL。要使用 "),s("code",[t._v("Any")]),t._v("类型，需要导入"),s("code",[t._v("google/protobuf/any.proto")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-protobuf line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-protobuf"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"google/protobuf/any.proto"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("message")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ErrorStatus")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" message "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("repeated")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token positional-class-name class-name"}},[t._v("google"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("protobuf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Any")]),t._v(" details "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("给定消息类型的默认类型 URL 是"),s("code",[t._v("type.googleapis.com/_packagename_._messagename_")]),t._v("。")]),t._v(" "),s("p",[t._v("不同的语言实现将支持运行库助手以类型安全的方式打包和解包 "),s("code",[t._v("Any")]),t._v("值。例如在java中，Any类型会有特殊的"),s("code",[t._v("pack()")]),t._v("和"),s("code",[t._v("unpack()")]),t._v("访问器，在C++中会有"),s("code",[t._v("PackFrom()")]),t._v("和"),s("code",[t._v("UnpackTo()")]),t._v("方法。")]),t._v(" "),s("div",{staticClass:"language-protobuf line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-protobuf"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Storing an arbitrary message type in Any.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token positional-class-name class-name"}},[t._v("NetworkErrorDetails")]),t._v(" details "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token positional-class-name class-name"}},[t._v("ErrorStatus")]),t._v(" status"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nstatus"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add_details")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("PackFrom")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("details"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Reading an arbitrary message from Any.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token positional-class-name class-name"}},[t._v("ErrorStatus")]),t._v(" status "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("const Any"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" detail "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" status"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("details")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("detail"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Is"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("NetworkErrorDetails"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token positional-class-name class-name"}},[t._v("NetworkErrorDetails")]),t._v(" network_error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    detail"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("UnpackTo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("network_error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" processing network_error "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])]),s("p",[s("strong",[t._v("目前正在开发用于处理任何类型的运行时库。")])]),t._v(" "),s("p",[t._v("如果你已经熟悉 proto2语法，Any 可以保存任意的 proto3消息，类似于 proto2消息，可以允许扩展。")]),t._v(" "),s("h3",{attrs:{id:"oneof"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#oneof"}},[t._v("#")]),t._v(" oneof")]),t._v(" "),s("p",[t._v("如果你有一条包含许多字段的消息，并且最多同时设置一个字段，那么你可以通过使用其中一个特性来强制执行此行为并节省内存。")]),t._v(" "),s("p",[s("code",[t._v("oneof")]),t._v("字段类似于常规字段，只不过共享内存中的一个字段中的所有字段都是常规字段，而且最多可以同时设置一个字段。设置其中的任何成员都会自动清除所有其他成员。根据所选择的语言，可以使用特殊 "),s("code",[t._v("case()")]),t._v("或 "),s("code",[t._v("WhichOneof()")]),t._v(" 方法检查 one of 中的哪个值被设置(如果有的话)。")]),t._v(" "),s("h4",{attrs:{id:"使用oneof"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用oneof"}},[t._v("#")]),t._v(" 使用oneof")]),t._v(" "),s("p",[t._v("要定义 oneof 字段需要在你的"),s("code",[t._v(".proto")]),t._v("文件中使用"),s("code",[t._v("oneof")]),t._v("关键字并在后面跟上名称，在下面的例子中字段名称为"),s("code",[t._v("test_oneof")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-protobuf line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-protobuf"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("message")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SampleMessage")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("oneof")]),t._v(" test_oneof "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token positional-class-name class-name"}},[t._v("SubMessage")]),t._v(" sub_message "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("然后将其中一个字段添加到该字段的定义中。你可以添加任何类型的字段，除了"),s("code",[t._v("map")]),t._v("字段和"),s("code",[t._v("repeated")]),t._v("字段。")]),t._v(" "),s("p",[t._v("在生成的代码中，其中一个字段具有与常规字段相同的 getter 和 setter。你还可以获得一个特殊的方法来检查其中一个设置了哪个值(如果有的话)。你可以在相关的 "),s("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/reference/overview",target:"_blank",rel:"noopener noreferrer"}},[t._v("API 参考文献"),s("OutboundLink")],1),t._v("中找到更多关于所选语言的 API。")]),t._v(" "),s("h4",{attrs:{id:"oneof-特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#oneof-特性"}},[t._v("#")]),t._v(" oneof 特性")]),t._v(" "),s("ul",[s("li",[t._v("设置一个字段将自动清除该字段的所有其他成员。因此，如果你设置了多个 oneof字段，那么只有最后设置的字段仍然具有值。")])]),t._v(" "),s("div",{staticClass:"language-protobuf line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-protobuf"}},[s("code",[t._v("  SampleMessage "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("message")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("message")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CHECK")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("message")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("has_name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("message")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mutable_sub_message")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Will clear name field.")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CHECK")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("message")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("has_name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("ul",[s("li",[t._v("如果解析器在连接中遇到同一个成员的多个成员，则只有最后看到的成员用于解析消息。")]),t._v(" "),s("li",[t._v("oneof 不支持"),s("code",[t._v("repeated")]),t._v("。")]),t._v(" "),s("li",[t._v("反射 api 适用于 oneof 字段。")]),t._v(" "),s("li",[t._v("如果将 oneof 字段设置为默认值(例如将 int32 oneof 字段设置为0) ，则将设置该字段的“ case”，并在连接上序列化该值。")]),t._v(" "),s("li",[t._v("如果你使用 C++ ，确保你的代码不会导致内存崩溃。下面的示例代码将崩溃，因为通过调用 "),s("code",[t._v("set_name()")]),t._v("方法已经删除了 "),s("code",[t._v("sub_message")]),t._v("。")])]),t._v(" "),s("div",{staticClass:"language-protobuf line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-protobuf"}},[s("code",[t._v("  SampleMessage "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("message")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  SubMessage"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" sub_message "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("message")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mutable_sub_message")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("message")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Will delete sub_message")]),t._v("\n  sub_message"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("set_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Crashes here")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("ul",[s("li",[t._v("在C++中，如果你使用"),s("code",[t._v("Swap()")]),t._v("两个 oneof 消息，每个消息，两个消息将拥有对方的值，例如在下面的例子中，"),s("code",[t._v("msg1")]),t._v("会拥有"),s("code",[t._v("sub_message")]),t._v("并且"),s("code",[t._v("msg2")]),t._v("会有"),s("code",[t._v("name")]),t._v("。")])]),t._v(" "),s("div",{staticClass:"language-protobuf line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-protobuf"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token positional-class-name class-name"}},[t._v("SampleMessage")]),t._v(" msg1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  msg1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token positional-class-name class-name"}},[t._v("SampleMessage")]),t._v(" msg2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  msg2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mutable_sub_message")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  msg1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("swap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("msg2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CHECK")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("has_sub_message")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CHECK")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("has_name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("h4",{attrs:{id:"向后兼容性问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#向后兼容性问题"}},[t._v("#")]),t._v(" 向后兼容性问题")]),t._v(" "),s("p",[t._v("添加或删除一个字段时要小心。如果检查 one of 的值返回"),s("code",[t._v("None")]),t._v("/"),s("code",[t._v("NOT_SET")]),t._v("，这可能意味着 one of 没有被设置，或者它已经被设置为 one of 的不同版本中的一个字段。这没有办法区分，因为没有办法知道未知字段是否是 oneof 的成员。")]),t._v(" "),s("p",[t._v("标签重用问题")]),t._v(" "),s("ul",[s("li",[t._v("将字段移入或移出 oneof：在序列化和解析消息之后，你可能会丢失一些信息(某些字段将被清除)。但是，你可以安全地将单个字段移动到新的 oneof 字段中，并且如果已知只设置了一个字段，则可以移动多个字段。")]),t._v(" "),s("li",[t._v("删除一个oneof 字段再添加回来：这可能会在消息被序列化和解析后清除当前设置的 oneof 字段。")]),t._v(" "),s("li",[t._v("拆分或合并oneof：这与移动常规字段有类似的问题。")])]),t._v(" "),s("h3",{attrs:{id:"maps"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#maps"}},[t._v("#")]),t._v(" Maps")]),t._v(" "),s("p",[t._v("如果你想创建一个关联映射作为你数据定义的一部分，protocol buffers提供了一个方便的快捷语法:")]),t._v(" "),s("div",{staticClass:"language-protobuf line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-protobuf"}},[s("code",[s("span",{pre:!0,attrs:{class:"token map class-name"}},[t._v("map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("key_type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value_type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" map_field "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" N"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("…其中"),s("code",[t._v("key_type")]),t._v("可以是任何整型或字符串类型(因此，除了浮点类型和字节以外的任何标量类型) 。注意，枚举不是有效的"),s("code",[t._v("key_type")]),t._v("。"),s("code",[t._v("value_type")]),t._v("可以是除另一个映射以外的任何类型。")]),t._v(" "),s("p",[t._v("例如，如果你想创建一个项目映射，其中每个"),s("code",[t._v("Project")]),t._v("消息都与一个字符串键相关联，你可以这样定义:")]),t._v(" "),s("div",{staticClass:"language-protobuf line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-protobuf"}},[s("code",[s("span",{pre:!0,attrs:{class:"token map class-name"}},[t._v("map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Project"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" projects "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("ul",[s("li",[t._v("映射字段不能重复。")]),t._v(" "),s("li",[t._v("映射值的有线格式排序和映射迭代排序是未定义的，因此不能依赖于映射项的特定排序。")]),t._v(" "),s("li",[t._v("当为 "),s("code",[t._v(".proto")]),t._v(" 生成文本格式时，映射按键排序。数字键按数字排序。")]),t._v(" "),s("li",[t._v("当从连接解析或合并时，如果有重复的映射键，则使用最后看到的键。当从文本格式解析映射时，如果有重复的键，解析可能会失败。")]),t._v(" "),s("li",[t._v("如果为映射字段提供了键但没有值，则该字段序列化时的行为与语言相关。在 C++ 、 Java、 Kotlin 和 Python 中，类型的默认值是序列化的，而在其他语言中，没有任何值是序列化的。")])]),t._v(" "),s("p",[t._v("生成的映射 API 目前可用于所有支持 proto3的语言。您可以在相关的 "),s("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/reference/overview",target:"_blank",rel:"noopener noreferrer"}},[t._v("API 参考"),s("OutboundLink")],1),t._v("中找到更多关于所选语言的映射 API 的信息。")]),t._v(" "),s("h4",{attrs:{id:"向后兼容性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#向后兼容性"}},[t._v("#")]),t._v(" 向后兼容性")]),t._v(" "),s("p",[t._v("map语法序列化后等同于如下内容，因此即使是不支持map语法的protocol buffer实现也是可以处理你的数据的：")]),t._v(" "),s("div",{staticClass:"language-protobuf line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-protobuf"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("message")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MapFieldEntry")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token positional-class-name class-name"}},[t._v("key_type")]),t._v(" key "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token positional-class-name class-name"}},[t._v("value_type")]),t._v(" value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("repeated")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token positional-class-name class-name"}},[t._v("MapFieldEntry")]),t._v(" map_field "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" N"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("任何支持映射的protocol buffers实现都必须生成并接受上述定义可以接受的数据。")]),t._v(" "),s("h2",{attrs:{id:"packages"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#packages"}},[t._v("#")]),t._v(" Packages")]),t._v(" "),s("p",[t._v("可以向 "),s("code",[t._v(".proto")]),t._v(" 文件添加一个可选"),s("code",[t._v("package")]),t._v("说明符，以防止协议消息类型之间的名称冲突。")]),t._v(" "),s("div",{staticClass:"language-protobuf line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-protobuf"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("message")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Open")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("然后，你可以在定义消息类型的字段时使用package说明符:")]),t._v(" "),s("div",{staticClass:"language-protobuf line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-protobuf"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("message")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Foo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token positional-class-name class-name"}},[t._v("foo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Open")]),t._v(" open "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("package 说明符影响生成代码的方式取决于你选择的语言:")]),t._v(" "),s("ul",[s("li",[t._v("对于"),s("strong",[t._v("C++")]),t._v("，产生的类会被包装在C++的命名空间中，如上例中的"),s("code",[t._v("Open")]),t._v("会被封装在 "),s("code",[t._v("foo::bar")]),t._v("空间中；")]),t._v(" "),s("li",[t._v("对于"),s("strong",[t._v("Java")]),t._v("和"),s("strong",[t._v("Kotlin")]),t._v("，包声明符会变为java的一个包，除非在"),s("code",[t._v(".proto")]),t._v("文件中提供了一个明确有"),s("code",[t._v("option java_package")]),t._v("；")]),t._v(" "),s("li",[t._v("对于 "),s("strong",[t._v("Python")]),t._v("，这个包声明符是被忽略的，因为Python模块是按照其在文件系统中的位置进行组织的")]),t._v(" "),s("li",[t._v("对于"),s("strong",[t._v("Go")]),t._v("，包可以被用做Go包名称，除非你显式的提供一个"),s("code",[t._v("option go_package")]),t._v("在你的"),s("code",[t._v(".proto")]),t._v("文件中。")]),t._v(" "),s("li",[t._v("对于"),s("strong",[t._v("Ruby")]),t._v("，生成的类可以被包装在内置的Ruby名称空间中，转换成Ruby所需的大小写样式 （首字母大写；如果第一个符号不是一个字母，则使用PB_前缀），例如Open会在"),s("code",[t._v("Foo::Bar")]),t._v("名称空间中。")]),t._v(" "),s("li",[t._v("在 "),s("strong",[t._v("C#")]),t._v(" 中，包在转换到 PascalCase 后被用作名称空间，除非你在"),s("code",[t._v(".proto")]),t._v("文件中提供"),s("code",[t._v("option csharp_namespace")]),t._v("。例如，"),s("code",[t._v("Open")]),t._v(" 将位于"),s("code",[t._v("Foo.Bar")]),t._v("名称空间中。")])]),t._v(" "),s("h4",{attrs:{id:"package和名称解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#package和名称解析"}},[t._v("#")]),t._v(" package和名称解析")]),t._v(" "),s("p",[t._v("在 protocol buffer 语言中，类型名称解析的工作原理类似于 C++ : 首先搜索最内层的作用域，然后搜索下一个最内层的作用域，依此类推，每个包都被认为是其父包的“ inner”。前导的“ .”(例如，"),s("code",[t._v(".foo.bar.Baz")]),t._v(")表示从最外侧的范围开始。")]),t._v(" "),s("p",[t._v("protocol buffer 通过解析导入的 "),s("code",[t._v(".proto")]),t._v(" 文件来解析所有类型名称。每种语言的代码生成器都知道如何引用该语言中的每种类型，即使它有不同的作用域规则。")]),t._v(" "),s("h3",{attrs:{id:"定义服务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定义服务"}},[t._v("#")]),t._v(" 定义服务")]),t._v(" "),s("p",[t._v("如果希望将消息类型与 RPC (远程过程调用)系统一起使用，可以在"),s("code",[t._v(".proto")]),t._v(" 文件和 protocol buffer 编译器将用你选择的语言生成服务接口代码和存根。因此，例如你希望定义一个 RPC 服务，其方法接受你的 "),s("code",[t._v("SearchRequest")]),t._v("并返回一个 "),s("code",[t._v("SearchResponse")]),t._v("，则可以在"),s("code",[t._v(".proto")]),t._v("文件如下定义。")]),t._v(" "),s("div",{staticClass:"language-protobuf line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-protobuf"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("service")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SearchService")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rpc")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Search")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SearchRequest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("returns")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SearchResponse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("使用 protocol buffers 最直接的 RPC 系统是 gRPC，这是 Google 开发的一个语言和平台中立的开源 RPC 系统，可以与 protocol buffers 一起使用。gRPC 特别适用于protocol buffers ，它可以让你直接从你的"),s("code",[t._v(".proto")]),t._v("文件使用特殊的 protocol buffers 编译器插件。")]),t._v(" "),s("p",[t._v("如果你不想使用 gRPC，你也可以在你自己的 RPC 实现中使用协议缓冲。你可以在"),s("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/proto#services",target:"_blank",rel:"noopener noreferrer"}},[t._v("《proto2语言指南》"),s("OutboundLink")],1),t._v("中找到更多相关信息。")]),t._v(" "),s("p",[t._v("还有一些正在进行的第三方项目正在开发 RPC 的实施协议缓冲。有关我们所知道的项目的链接列表，请参阅"),s("a",{attrs:{href:"https://github.com/protocolbuffers/protobuf/blob/master/docs/third_party.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("第三方添加项 wiki 页面"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"json-映射"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#json-映射"}},[t._v("#")]),t._v(" JSON 映射")]),t._v(" "),s("p",[t._v("proto3支持 JSON 的规范编码，使得系统之间更容易共享数据。下表按类型逐一描述了编码。")]),t._v(" "),s("p",[t._v("如果 json 编码的数据中缺少某个值，或者该值为 null，那么在解析为 protocol buffer 时，该值将被解释为适当的默认值。如果一个字段在 protocol buffer 中具有默认值，为了节省空间，默认情况下 json 编码的数据中将省略该字段。具体实现可以提供在JSON编码中可选的默认值。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("proto3")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("JSON")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("JSON example")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("Notes")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("message")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("object")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v('{"fooBar": v, "g": null, …}')])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Generates JSON objects. Message field names are mapped to lowerCamelCase and become JSON object keys. If the "),s("code",[t._v("json_name")]),t._v(" field option is specified, the specified value will be used as the key instead. Parsers accept both the lowerCamelCase name (or the one specified by the "),s("code",[t._v("json_name")]),t._v(" option) and the original proto field name. "),s("code",[t._v("null")]),t._v(" is an accepted value for all field types and treated as the default value of the corresponding field type.")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("enum")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("string")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v('"FOO_BAR"')])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("The name of the enum value as specified in proto is used. Parsers accept both enum names and integer values.")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("map")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("object")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v('{"k": v, …}')])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("All keys are converted to strings.")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("repeated V")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("array")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("[v, …]")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("null")]),t._v(" is accepted as the empty list "),s("code",[t._v("[]")]),t._v(".")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("bool")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("true, false")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("true, false")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("string")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("string")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v('"Hello World!"')])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("bytes")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("base64 string")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v('"YWJjMTIzIT8kKiYoKSctPUB+"')])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("JSON value will be the data encoded as a string using standard base64 encoding with paddings. Either standard or URL-safe base64 encoding with/without paddings are accepted.")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("int32, fixed32, uint32")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("number")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("1, -10, 0")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("JSON value will be a decimal number. Either numbers or strings are accepted.")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("int64, fixed64, uint64")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("string")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v('"1", "-10"')])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("JSON value will be a decimal string. Either numbers or strings are accepted.")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("float, double")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("number")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v('1.1, -10.0, 0, "NaN", "Infinity"')])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("JSON value will be a number or one of the special string values “NaN”, “Infinity”, and “-Infinity”. Either numbers or strings are accepted. Exponent notation is also accepted. -0 is considered equivalent to 0.")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Any")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("object")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v('{"@type": "url", "f": v, … }')])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("If the "),s("code",[t._v("Any")]),t._v(" contains a value that has a special JSON mapping, it will be converted as follows: "),s("code",[t._v('{"@type": xxx, "value": yyy}')]),t._v(". Otherwise, the value will be converted into a JSON object, and the "),s("code",[t._v('"@type"')]),t._v(" field will be inserted to indicate the actual data type.")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Timestamp")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("string")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v('"1972-01-01T10:00:20.021Z"')])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Uses RFC 3339, where generated output will always be Z-normalized and uses 0, 3, 6 or 9 fractional digits. Offsets other than “Z” are also accepted.")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Duration")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("string")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v('"1.000340012s", "1s"')])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Generated output always contains 0, 3, 6, or 9 fractional digits, depending on required precision, followed by the suffix “s”. Accepted are any fractional digits (also none) as long as they fit into nano-seconds precision and the suffix “s” is required.")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Struct")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("object")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("{ … }")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Any JSON object. See "),s("code",[t._v("struct.proto")]),t._v(".")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Wrapper types")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("various types")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v('2, "2", "foo", true, "true", null, 0, …')])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Wrappers use the same representation in JSON as the wrapped primitive type, except that "),s("code",[t._v("null")]),t._v(" is allowed and preserved during data conversion and transfer.")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("FieldMask")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("string")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v('"f.fooBar,h"')])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("See "),s("code",[t._v("field_mask.proto")]),t._v(".")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("ListValue")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("array")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("[foo, bar, …]")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Value")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("value")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("Any JSON value. Check "),s("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.Value",target:"_blank",rel:"noopener noreferrer"}},[t._v("google.protobuf.Value"),s("OutboundLink")],1),t._v(" for details.")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("NullValue")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("null")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}}),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("JSON null")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Empty")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("object")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[s("code",[t._v("{}")])]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("An empty JSON object")])])])]),t._v(" "),s("h4",{attrs:{id:"json选项"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#json选项"}},[t._v("#")]),t._v(" JSON选项")]),t._v(" "),s("p",[t._v("一个proto3协议 JSON 实现可能提供以下选项:")]),t._v(" "),s("ul",[s("li",[t._v("提供默认值的字段：在proto3 JSON 输出中，值为默认值的字段被省略。可以提供一个选项，用默认值覆盖此行为和输出字段。")]),t._v(" "),s("li",[t._v("忽略位置字段：在缺省情况下，Proto3 JSON 解析器应该拒绝未知字段，但在解析过程中可能会提供一个忽略未知字段的选项。")]),t._v(" "),s("li",[t._v("使用 proto 字段名而不是小驼峰名称：默认情况下，proto3 JSON 打印机应该将字段名转换为 lowerCamelCase，并使用它作为 JSON 名称。可以提供一个选项，用原型字段名作为 JSON 名。需要协议3 JSON 解析器同时接受转换后的 lowerCamelCase 名称和原始字段名称。")]),t._v(" "),s("li",[t._v("以整数而不是字符串形式展示枚举值：在 JSON 输出中，默认情况下使用枚举值的名称。可以提供一个选项来代替使用枚举值的数值。")])]),t._v(" "),s("h2",{attrs:{id:"options"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#options"}},[t._v("#")]),t._v(" Options")]),t._v(" "),s("p",[t._v("Proto 文件中的单个声明可以使用许多选项进行注释。选项不会改变声明的总体含义，但可能会影响在特定上下文中处理声明的方式。可用选项的完整列表在 google/protobuf/descriptor.proto 中定义。")]),t._v(" "),s("p",[t._v("有些选项是文件级选项，这意味着它们应该在顶级作用域中编写，而不是在任何消息、枚举或服务定义中。有些选项是消息级选项，这意味着它们应该写在消息定义中。有些选项是字段级选项，这意味着它们应该写在字段定义中。也可以在枚举类型、枚举值、一个字段、服务类型和服务方法上编写选项; 但是，目前对于这些选项都不存在有用的选项。")]),t._v(" "),s("p",[t._v("以下是一些最常用的选项:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("java_package")]),t._v("（文件选项）：要用于生成的 Java/Kotlin 类的包。如果没有显示在"),s("code",[t._v(".proto")]),t._v("文件中指明"),s("code",[t._v("java_package")]),t._v("，默认会使用proto package名称（在.proto文件中使用package关键字指定的）。然而，proto package 通常不会成为有效的 Java 软件包，因为原始软件包不会以反向域名开始。如果不生成 Java 或 Kotlin 代码，则此选项不起作用。")])]),t._v(" "),s("div",{staticClass:"language-protobuf line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-protobuf"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("option")]),t._v(" java_package "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"com.example.foo"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("hr")])}),[],!1,null,null,null);e.default=n.exports}}]);